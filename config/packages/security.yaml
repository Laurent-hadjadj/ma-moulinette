---
security:
    # On active le mécanisme d'authentification
    enable_authenticator_manager: true
    # On léve une exception si l'utilisateur n'existe pas
    hide_user_not_found: false

    role_hierarchy:
        ROLE_GESTIONNAIRE: ['ROLE_UTILISATEUR', 'ROLE_BATCH']
        ROLE_BATCH: ROLE_UTILISATEUR

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Main\utilisateur:
            algorithm: auto

    providers:
        app_utilisateur_provider:
            entity:
                class: App\Entity\Main\Utilisateur
                property: courriel

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_utilisateur_provider
            custom_authenticator:
                - App\Security\LoginFormAuthenticator

            logout:
                path: logout
                target: login

            remember_me:
                secret: '%kernel.secret%'
                # si le mot de passe change, le cookie est invalide
                signature_properties: [password]

            # Maximum login par minutes
            # composer require symfony/rate-limiter
            login_throttling:
                max_attempts: 3

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/welcome, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_UTILISATEUR }
        - { path: ^/, roles: ROLE_UTILISATEUR }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following

            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
...
